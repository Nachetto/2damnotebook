{
	"info": {
		"_postman_id": "61b31186-22b0-4703-af91-3c2396c8c568",
		"name": "MiPrimerRest_IgnacioLlorente",
		"description": "# üë®üèº‚Äçüíª Variablesüë®üèø‚Äçüíª\n\nEsta guia te dice las variables que tengo y como influye al cambiarlas en las pruebas de postman, hecho por Ignacio Llorente\n\n#### **Pedir todos**\n\nLa url base no se necesita cambiar, es la del instituto, pero lo que si que vas a querer cambiar para comprobar todo es la variable TIPO, de customers a orders y viceversa\n\n#### **Pedir uno**\n\nPuedes cambiar las variables TIPO como antes, tambien puedes cambiar el id al que quieras.\n\n#### **A√±adir uno**\n\nPuedes campiar el TIPO y el body puedes poner dos variables, CUERPO_CUSTOMER y CUERPO_ORDER para comprobar que puedes agregar a tu parecer\n\n```\nCUERPO_CUSTOMER\n{\"birthdate\":\"2000-04-17\",\"credential\":{\"password\":\"mierda\",\"username\":\"hostia\"},\"email\":\"hastaloshuevos@gmail.com\",\"id\":222,\"name\":\"Oscar\",\"phone\":485234911,\"surname\":\"Novillo\"}\nCUERPO_ORDER\n{\"customerid\":1,\"orderid\":9,\"orderdate\":\"2023-10-10T10:31:22\",\"tableid\":2}\n\n ```\n\n#### **Modificar uno**\n\nEn este puedes cambiar todo: el id, el tipo y el cuerpo, sin importar que sea un query param\n\n#### **Eliminar uno**\n\nEn este ultimo puedes cambiar las variables del id y el tipo\n\n#### **Modificar uno**\n\nSimplemente cambiar la variable extra de extra_customers a extra_orders en funcion del TIPO que estes consultando!\n\n<img src=\"https://content.pstmn.io/e4f7cc5d-88ac-40ae-a8b8-c2084f3ad2ac/aW1hZ2UucG5n\" width=\"618\" height=\"73\">",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31109183"
	},
	"item": [
		{
			"name": "Pedir Todos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/{{tipo}}/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"{{tipo}}",
						""
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Pedir Uno",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/{{tipo}}/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"{{tipo}}",
						"{{id}}"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Extra",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/{{tipo}}/{{id}}/{{extra_customer}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"{{tipo}}",
						"{{id}}",
						"{{extra_customer}}"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "A√±adir uno(cambiar variable a cuerpo_order)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{cuerpo_customer}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/{{tipo}}?id={{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"{{tipo}}"
					],
					"query": [
						{
							"key": "id",
							"value": "{{id}}"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Modificar uno(cambiar variable a cuerpo_order)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{cuerpo_customer}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/{{tipo}}?id={{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"{{tipo}}"
					],
					"query": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Eliminar uno",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/{{tipo}}/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"{{tipo}}",
						"{{id}}"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://informatica.wompwomp.com:2326/IgnacioLlorente_RestaurantRest-OscarApruebame/api",
			"type": "string"
		},
		{
			"key": "base_url_localHost",
			"value": "http://localhost:8080/IgnacioLlorente_RestaurantRest-OscarApruebame/api",
			"type": "string"
		},
		{
			"key": "tipo",
			"value": "customers",
			"type": "string"
		},
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "cuerpo_customer",
			"value": "{\"birthdate\":\"2000-04-17\",\"credential\":{\"password\":\"mierda\",\"username\":\"hostia\"},\"email\":\"hastaloshuevos@gmail.com\",\"id\":222,\"name\":\"Oscar\",\"phone\":485234911,\"surname\":\"Novillo\"}",
			"type": "string"
		},
		{
			"key": "cuerpo_order",
			"value": "{\"customerid\":1,\"orderid\":9,\"orderdate\":\"2023-10-10T10:31:22\",\"tableid\":2}",
			"type": "string"
		},
		{
			"key": "extra_customer",
			"value": "hasanyorders",
			"type": "string"
		},
		{
			"key": "extra_order",
			"value": "getlastorderid",
			"type": "string"
		}
	]
}